name: Test Nixopus Development Environment Setup

on:
  push:
    branches:
      [master, feat/develop, feat/dev_environment, feat/dev_environment-macos]
    paths:
      - 'scripts/setup.sh'
      - '.github/workflows/dev-env-setup.yml'
  workflow_dispatch:

jobs:
  setup-environment:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        if: runner.os == 'Linux'
        uses: docker/setup-docker-action@v3

      # - name: Set up Docker (macOS-13)
      #   if: runner.os == 'macOS'
      #   uses: docker/setup-docker-action@v4
      #   env:
      #     LIMA_START_ARGS: --cpus 4 --memory 8

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
          docker compose version

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip git openssl

      # - name: Install deps (macOS-13)
      #   if: runner.os == 'macOS'
      #   run: |
      #     brew update
      #     brew install python git openssl

      - name: Make setup script executable
        run: chmod +x scripts/setup.sh

      - name: Run setup script
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo ./scripts/setup.sh
          else
            ./scripts/setup.sh
          fi
