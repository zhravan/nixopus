name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha.*'
      - 'v*.*.*-beta.*'
      - 'v*.*.*-rc.*'

env:
  REGISTRY: ghcr.io
  API_IMAGE: ${{ github.repository }}-api
  VIEW_IMAGE: ${{ github.repository }}-view

jobs:
  pre-release:
    name: Pre-release Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify Tag Format
        run: |
          if ! [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+(-(alpha|beta|rc)\.[0-9]+)?$ ]]; then
            echo "Error: Tag format must be vX.Y.Z or vX.Y.Z-alpha.N (e.g., v0.1.0-alpha.1)"
            exit 1
          fi

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          cache-dependency-path: api/go.sum

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: view/yarn.lock

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: |
          cd api && go mod download
          cd ../view && yarn install --frozen-lockfile

      # - name: Run Tests
      #   run: |
      #     cd api && go test ./...
      #     cd ../view && yarn test

  create-release:
    name: Create Release
    needs: pre-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Release Notes
        id: release_notes
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          body: ${{ steps.release_notes.outputs.body }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-alpha.') || contains(github.ref_name, '-beta.') || contains(github.ref_name, '-rc.') }}
          generate_release_notes: false

      - name: Notify Release
        uses: actions/github-script@v7
        with:
          script: |
            const isPrerelease = ${{ contains(github.ref_name, '-alpha.') || contains(github.ref_name, '-beta.') || contains(github.ref_name, '-rc.') }};
            const releaseType = isPrerelease ? 'pre-release' : 'release';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸŽ‰ ${releaseType} ${{ github.ref_name }} has been created!\n\nContainer images will be built and pushed to ${process.env.REGISTRY}/${process.env.API_IMAGE} and ${process.env.REGISTRY}/${process.env.VIEW_IMAGE}`
            }) 