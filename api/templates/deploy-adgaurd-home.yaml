metadata:
  id: "deploy-adguard-home"
  name: "AdGuard Home"
  description: "AdGuard Home is a network-wide software for blocking ads and trackers via DNS filtering."
  author: "Nixopus Team"
  icon: "üõ°Ô∏è"
  category: "Containers"
  type: "install"
  version: "1.0.0"
  isVerified: false

variables:
  image:
    type: "string"
    description: "Docker image for AdGuard Home"
    default: "adguard/adguardhome"
    is_required: true
  tag:
    type: "string"
    description: "Docker image tag"
    default: "latest"
    is_required: true
  container_name:
    type: "string"
    description: "Name of the AdGuard Home container"
    default: "adguard-home"
    is_required: true
  host_port:
    type: "integer"
    description: "Host port to expose AdGuard Home web interface"
    default: 3000
    is_required: true
  container_port:
    type: "integer"
    description: "Container port AdGuard Home listens on"
    default: 3000
    is_required: true
  dns_port:
    type: "integer"
    description: "DNS port to expose"
    default: 53
    is_required: true
  data_volume:
    type: "string"
    description: "Host path to mount for persistent data"
    default: "./adguard_data"
    is_required: true

execution:
  run:
    - name: "Pull AdGuard Home image"
      type: "docker"
      properties:
        action: "pull"
        image: "{{ image }}"
        tag: "{{ tag }}"
      timeout: 300

    - name: "Run AdGuard Home container"
      type: "docker"
      properties:
        action: "run"
        name: "{{ container_name }}"
        image: "{{ image }}"
        tag: "{{ tag }}"
        ports:
          - "{{ host_port }}:{{ container_port }}"
          - "{{ dns_port }}:{{ dns_port }}"
        volumes:
          - "{{ data_volume }}:/opt/adguardhome/work"
          - "{{ data_volume }}:/opt/adguardhome/conf"
        restart: "unless-stopped"
      timeout: 180

  # validate:
  #   - name: "Check HTTP response from AdGuard Home"
  #     type: "command"
  #     properties:
  #       cmd: "curl -fsS -o /dev/null -w '%{http_code}\\n' http://localhost:{{ host_port }}/ | grep -E '^(200|301|302)$'"
  #     timeout: 60
