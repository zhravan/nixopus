metadata:
  id: "deploy-dozzle"
  name: "Dozzle"
  description: "Dozzle is a real-time log viewer for Docker containers. It provides a modern web interface to monitor and view logs from all your Docker containers in real-time, with support for container actions like stopping, starting, and restarting containers."
  author: "Nixopus Team"
  icon: "ðŸ“Š"
  category: "Monitoring"
  type: "install"
  version: "1.0.0"
  isVerified: false

variables:
  image:
    type: "string"
    description: "Docker image for Dozzle"
    default: "amir20/dozzle"
    is_required: true

  tag:
    type: "string"
    description: "Docker image tag"
    default: "latest"
    is_required: true

  container_name:
    type: "string"
    description: "Name of the Dozzle container"
    default: "dozzle"
    is_required: true

  host_port:
    type: "integer"
    description: "Host port to expose Dozzle"
    default: 8080
    is_required: true

  container_port:
    type: "integer"
    description: "Container port for Dozzle"
    default: 8080
    is_required: true

  docker_socket_path:
    type: "string"
    description: "Path to Docker socket on host"
    default: "/var/run/docker.sock"
    is_required: true

  enable_actions:
    type: "string"
    description: "Enable container actions (start, stop, restart) - set to 'true' to enable"
    default: "false"
    is_required: false

  enable_shell:
    type: "string"
    description: "Enable shell access to containers - set to 'true' to enable"
    default: "false"
    is_required: false

execution:
  run:
    - name: "Pull Dozzle image"
      type: "docker"
      properties:
        action: "pull"
        image: "{{ image }}"
        tag: "{{ tag }}"
      timeout: 300

    - name: "Run Dozzle container"
      type: "docker"
      properties:
        action: "run"
        name: "{{ container_name }}"
        image: "{{ image }}"
        tag: "{{ tag }}"
        ports: "{{ host_port }}:{{ container_port }}"
        restart: "unless-stopped"
        env:
          DOZZLE_LEVEL: "info"
          DOZZLE_TAILSIZE: "300"
          DOZZLE_FILTER: ""
          DOZZLE_ACTIONS: "{{ enable_actions }}"
          DOZZLE_SHELL: "{{ enable_shell }}"
        volumes:
          - "{{ docker_socket_path }}:/var/run/docker.sock:ro"
      timeout: 180

  validate:
    - name: "Check Dozzle HTTP response"
      type: "command"
      properties:
        cmd: "sh -c 'for i in $(seq 1 30); do code=$(curl -fsS -o /dev/null -w \"%{http_code}\\n\" http://localhost:{{ host_port }} || true); echo \"HTTP $code\"; echo $code | grep -E \"^(200|301|302)$\" && exit 0; sleep 2; done; exit 1'"
      timeout: 60

    - name: "Verify Dozzle is accessible"
      type: "command"
      properties:
        cmd: "sh -c 'curl -fsS http://localhost:{{ host_port }} | grep -i dozzle >/dev/null && exit 0 || exit 1'"
      timeout: 30
