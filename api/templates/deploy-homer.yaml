metadata:
  id: "deploy-homer"
  name: "Homer"
  description: "Homer is a simple static homepage for your server. It features a simple yaml configuration and a clean interface. Perfect to serve as a dashboard or homepage to your services with an easy to edit yaml configuration."
  author: "Nixopus Team"
  icon: "🏠"
  category: "Containers"
  type: "install"
  version: "1.0.0"
  isVerified: false

variables:
  image:
    type: "string"
    description: "Docker image for Homer"
    default: "b4bz/homer"
    is_required: true

  tag:
    type: "string"
    description: "Docker image tag"
    default: "latest"
    is_required: true

  container_name:
    type: "string"
    description: "Name of the Homer container"
    default: "homer"
    is_required: true

  host_port:
    type: "integer"
    description: "Host port to expose Homer"
    default: 8080
    is_required: true

  container_port:
    type: "integer"
    description: "Container port for Homer"
    default: 8080
    is_required: true

  config_volume_name:
    type: "string"
    description: "Named Docker volume for Homer configuration files"
    default: "homer-config"
    is_required: true

  proxy_domain:
    type: "string"
    description: "Domain name for Homer (optional)"
    default: ""
    is_required: false

execution:
  run:
    - name: "Pull Homer image"
      type: "docker"
      properties:
        action: "pull"
        image: "{{ image }}"
        tag: "{{ tag }}"
      timeout: 300

    - name: "Run Homer container"
      type: "docker"
      properties:
        action: "run"
        name: "{{ container_name }}"
        image: "{{ image }}"
        tag: "{{ tag }}"
        ports: "{{ host_port }}:{{ container_port }}"
        restart: "unless-stopped"
        volumes:
          - "{{ config_volume_name }}:/www/assets"
      timeout: 180

    - name: "Add proxy for Homer"
      type: "proxy"
      properties:
        action: "add"
        domain: "{{ proxy_domain }}"
        port: "{{ host_port }}"
      timeout: 30

  validate:
    - name: "Check Homer HTTP response"
      type: "command"
      properties:
        cmd: "sh -c 'for i in $(seq 1 30); do code=$(curl -fsS -o /dev/null -w \"%{http_code}\\n\" http://localhost:{{ host_port }} || true); echo \"HTTP $code\"; echo $code | grep -E \"^(200|301|302)$\" && exit 0; sleep 2; done; exit 1'"
      timeout: 60

    - name: "Verify Homer is accessible"
      type: "command"
      properties:
        cmd: "sh -c 'curl -fsS http://localhost:{{ host_port }} | grep -i homer >/dev/null && exit 0 || exit 1'"
      timeout: 30
