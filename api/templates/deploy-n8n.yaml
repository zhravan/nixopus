metadata:
  id: "deploy-n8n"
  name: "n8n"
  description: "n8n is a workflow automation tool that lets you connect applications and automate tasks easily."
  author: "Nixopus Team"
  icon: "ðŸ”„"
  category: "Containers"
  type: "install"
  version: "1.0.0"
  isVerified: false

variables:
  image:
    type: "string"
    description: "Docker image for n8n"
    default: "docker.n8n.io/n8nio/n8n"
    is_required: true

  tag:
    type: "string"
    description: "Docker image tag"
    default: "latest"
    is_required: true

  container_name:
    type: "string"
    description: "Name of the container"
    default: "n8n"
    is_required: true

  host_port:
    type: "integer"
    description: "Host port to expose"
    default: 5678
    is_required: true

  container_port:
    type: "integer"
    description: "Container port to map"
    default: 5678
    is_required: true

  data_volume:
    type: "string"
    description: "Volume or host path to persist n8n data"
    default: "n8n_data:/home/node/.n8n"
    is_required: true

  timezone:
    type: "string"
    description: "Timezone (TZ) environment variable"
    default: "UTC"
    is_required: false

execution:
  run:
    - name: "Pull n8n image"
      type: "docker"
      properties:
        action: "pull"
        image: "{{ image }}"
        tag: "{{ tag }}"
      timeout: 300

    - name: "Run n8n container"
      type: "docker"
      properties:
        action: "run"
        name: "{{ container_name }}"
        image: "{{ image }}"
        tag: "{{ tag }}"
        ports: "{{ host_port }}:{{ container_port }}"
        volumes: "{{ data_volume }}"
        environment:
          - "N8N_PORT={{ container_port }}"
          - "N8N_HOST=0.0.0.0"
          - "WEBHOOK_URL=http://localhost:{{ host_port }}"
          - "TZ={{ timezone }}"
        restart: "unless-stopped"
      timeout: 120

  # validate:
  #   - name: "Verify n8n container is running"
  #     type: "command"
  #     properties:
  #       cmd: "docker ps --filter name={{ container_name }} --filter status=running --format '{{.Names}}' | grep -q {{ container_name }}"
  #     timeout: 30

  #   - name: "Check n8n HTTP response"
  #     type: "command"
  #     properties:
  #       cmd: "sh -c 'for i in $(seq 1 30); do docker exec {{ container_name }} wget -q -O- http://localhost:{{ container_port }} && exit 0 || true; sleep 2; done; exit 1'"
  #     timeout: 90
