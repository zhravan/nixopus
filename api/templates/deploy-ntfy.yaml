metadata:
  id: "deploy-ntfy"
  name: "ntfy"
  description: "ntfy is a simple HTTP-based pub-sub notification server that lets you send and receive push notifications easily using Docker."
  author: "Nixopus Team"
  icon: "ðŸ“¨"
  category: "Containers"
  type: "install"
  version: "1.0.0"
  isVerified: false

variables:
  image:
    type: "string"
    description: "Docker image for ntfy server"
    default: "binwiederhier/ntfy"
    is_required: true

  tag:
    type: "string"
    description: "Docker image tag"
    default: "latest"
    is_required: true

  container_name:
    type: "string"
    description: "Name of the ntfy container"
    default: "ntfy-server"
    is_required: true

  host_port:
    type: "integer"
    description: "Host port to expose ntfy web interface"
    default: 80
    is_required: true

  container_port:
    type: "integer"
    description: "Internal ntfy server port"
    default: 80
    is_required: true

  data_dir:
    type: "string"
    description: "Directory on host to store ntfy data and configuration files"
    default: "ntfy_data"
    is_required: true

execution:
  run:
    - name: "Create data directory"
      type: "command"
      properties:
        cmd: "mkdir -p {{ data_dir }}"
      timeout: 30

    - name: "Pull ntfy Docker image"
      type: "docker"
      properties:
        action: "pull"
        image: "{{ image }}"
        tag: "{{ tag }}"
      timeout: 120

    - name: "Run ntfy server container"
      type: "docker"
      properties:
        action: "run"
        name: "{{ container_name }}"
        image: "{{ image }}"
        tag: "{{ tag }}"
        ports: "{{ host_port }}:{{ container_port }}"
        volumes: "{{ data_dir }}:/var/lib/ntfy"
        restart: "unless-stopped"
      timeout: 120

  # validate:
  #   - name: "Check ntfy container status"
  #     type: "command"
  #     properties:
  #       cmd: "docker ps --filter 'name={{ container_name }}' --format '{{.Names}}' | grep -q '{{ container_name }}'"
  #     timeout: 60

  #   - name: "Check if ntfy web UI is accessible"
  #     type: "command"
  #     properties:
  #       cmd: "curl -fsS -o /dev/null -w '%{http_code}\\n' http://localhost:{{ host_port }} | grep -E '^(200|301|302)$'"
  #     timeout: 60
