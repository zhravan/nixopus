metadata:
  id: "deploy-opengist"
  name: "Opengist"
  description: "A self-hosted pastebin powered by Git, open-source alternative to Github Gist"
  author: "Nixopus Team"
  icon: "📝"
  category: "Development"
  type: "install"
  version: "1.0.0"
  isVerified: false

variables:
  image:
    type: "string"
    description: "Docker image for Opengist"
    default: "ghcr.io/thomiceli/opengist"
    is_required: true

  tag:
    type: "string"
    description: "Docker image tag"
    default: "1"
    is_required: true

  container_name:
    type: "string"
    description: "Name of the Opengist container"
    default: "opengist"
    is_required: true

  http_port:
    type: "integer"
    description: "Host port to expose Opengist HTTP interface"
    default: 6157
    is_required: true

  ssh_port:
    type: "integer"
    description: "Host port to expose Opengist SSH interface"
    default: 2222
    is_required: true

  http_container_port:
    type: "integer"
    description: "Container port for Opengist HTTP interface"
    default: 6157
    is_required: true

  ssh_container_port:
    type: "integer"
    description: "Container port for Opengist SSH interface"
    default: 2222
    is_required: true

  data_volume_name:
    type: "string"
    description: "Named Docker volume for Opengist data persistence"
    default: "opengist-data"
    is_required: true

  log_level:
    type: "string"
    description: "Logging level (debug, info, warn, error)"
    default: "info"
    is_required: false

  proxy_domain:
    type: "string"
    description: "Domain name for Opengist (optional)"
    default: ""
    is_required: false

execution:
  run:
    - name: "Pull Opengist image"
      type: "docker"
      properties:
        action: "pull"
        image: "{{ image }}"
        tag: "{{ tag }}"
      timeout: 300

    - name: "Run Opengist container"
      type: "docker"
      properties:
        action: "run"
        name: "{{ container_name }}"
        image: "{{ image }}"
        tag: "{{ tag }}"
        ports: "{{ http_port }}:{{ http_container_port }},{{ ssh_port }}:{{ ssh_container_port }}"
        restart: "unless-stopped"
        env:
          OG_LOG_LEVEL: "{{ log_level }}"
        volumes:
          - "{{ data_volume_name }}:/opengist"
      timeout: 180

    - name: "Add proxy for Opengist"
      type: "proxy"
      properties:
        action: "add"
        domain: "{{ proxy_domain }}"
        port: "{{ http_port }}"
      timeout: 30

  validate:
    - name: "Check Opengist health endpoint"
      type: "command"
      properties:
        cmd: "sh -c 'for i in $(seq 1 30); do curl -fsS --connect-timeout 2 -m 5 http://localhost:{{ http_port }} >/dev/null && exit 0; sleep 2; done; exit 1'"
      timeout: 60

    - name: "Verify Opengist is responding"
      type: "command"
      properties:
        cmd: "sh -c 'for i in $(seq 1 30); do curl -fsS --connect-timeout 2 -m 5 -I http://localhost:{{ http_port }} | grep -q \"HTTP\" && exit 0; sleep 2; done; exit 1'"
      timeout: 60
