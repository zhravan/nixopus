metadata:
  id: "deploy-statpingng"
  name: "Statping-ng"
  description: "An easy to use Status Page for your websites and applications"
  author: "Nixopus Team"
  icon: "ðŸ“Š"
  category: "Monitoring"
  type: "install"
  version: "1.0.0"
  isVerified: false

variables:
  image:
    type: "string"
    description: "Docker image for Statping-ng"
    default: "adamboutcher/statping-ng"
    is_required: true

  tag:
    type: "string"
    description: "Docker image tag"
    default: "latest"
    is_required: true

  container_name:
    type: "string"
    description: "Name of the Statping-ng container"
    default: "statping-ng"
    is_required: true

  host_port:
    type: "integer"
    description: "Host port to expose Statping-ng"
    default: 8080
    is_required: true

  container_port:
    type: "integer"
    description: "Container port for Statping-ng"
    default: 8080
    is_required: true

  data_volume:
    type: "string"
    description: "Named volume for Statping-ng data storage"
    default: "statpingng_data"
    is_required: true

  db_connection:
    type: "string"
    description: "Database connection string (optional, uses sqlite by default)"
    default: "sqlite"
    is_required: false

  name:
    type: "string"
    description: "Name of the status page"
    default: "Status Page"
    is_required: false

  description:
    type: "string"
    description: "Description for the status page"
    default: "Monitor your services"
    is_required: false

  proxy_domain:
    type: "string"
    description: "Domain name for Statping-ng (optional)"
    default: ""
    is_required: false

execution:
  run:
    - name: "Pull Statping-ng image"
      type: "docker"
      properties:
        action: "pull"
        image: "{{ image }}"
        tag: "{{ tag }}"
      timeout: 300

    - name: "Run Statping-ng container"
      type: "docker"
      properties:
        action: "run"
        name: "{{ container_name }}"
        image: "{{ image }}"
        tag: "{{ tag }}"
        ports: "{{ host_port }}:{{ container_port }}"
        restart: "unless-stopped"
        volumes:
          - "{{ data_volume }}:/app"
        env:
          DB_CONN: "{{ db_connection }}"
          NAME: "{{ name }}"
          DESCRIPTION: "{{ description }}"
      timeout: 180

    - name: "Add proxy for Statping-ng"
      type: "proxy"
      properties:
        action: "add"
        domain: "{{ proxy_domain }}"
        port: "{{ host_port }}"
      timeout: 30

  validate:
    - name: "Wait for Statping-ng to be ready"
      type: "command"
      properties:
        cmd: "sh -c 'for i in $(seq 1 30); do docker ps --filter \"name={{ container_name }}\" --filter \"status=running\" | grep -q {{ container_name }} && exit 0; sleep 2; done; exit 1'"
      timeout: 60

    - name: "Verify Statping-ng is responding"
      type: "command"
      properties:
        cmd: "sh -c 'for i in $(seq 1 30); do code=$(curl -fsS -o /dev/null -w \"%{http_code}\\n\" http://localhost:{{ host_port }} || true); echo \"HTTP $code\"; echo $code | grep -E \"^(200|301|302)$\" && exit 0; sleep 2; done; exit 1'"
      timeout: 60
