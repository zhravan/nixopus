metadata:
  id: "deploy-teleport"
  name: "Teleport"
  description: "Teleport is a free and open-source identity-based access proxy to SSH, Kubernetes, databases, and internal web applications."
  author: "Nixopus Team"
  icon: "üîê"
  category: "Security"
  type: "install"
  version: "1.0.0"
  isVerified: true

variables:
  compose_file:
    type: "string"
    description: "Path to the Docker Compose file"
    default: "docker-compose.yml"
    is_required: true
  container_name:
    type: "string"
    description: "Name of the Teleport container"
    default: "teleport"
    is_required: true
  host_port:
    type: "integer"
    description: "Host port to expose Teleport web interface"
    default: 3080
    is_required: true
  container_port:
    type: "integer"
    description: "Container port Teleport listens on"
    default: 3080
    is_required: true
  data_volume:
    type: "string"
    description: "Docker volume name for persistent data"
    default: "teleport_data"
    is_required: true
  config_volume:
    type: "string"
    description: "Docker volume name for Teleport configuration"
    default: "teleport_config"
    is_required: true
  timezone:
    type: "string"
    description: "Timezone for the container"
    default: "UTC"
    is_required: true

execution:
  run:
    - name: "Pull Teleport image"
      type: "docker"
      properties:
        action: "pull"
        image: "public.ecr.aws/gravitational/teleport"
        tag: "latest"
      timeout: 300

    - name: "Run Teleport container"
      type: "docker"
      properties:
        action: "run"
        name: "{{ container_name }}"
        image: "public.ecr.aws/gravitational/teleport"
        tag: "latest"
        ports:
          - "{{ host_port }}:{{ container_port }}"
        volumes:
          - "{{ data_volume }}:/var/lib/teleport"
          - "{{ config_volume }}:/etc/teleport"
        environment:
          - TZ={{ timezone }}
        restart: "unless-stopped"
      timeout: 180

  # validate:
  #   - name: "Check HTTP response from Teleport"
  #     type: "command"
  #     properties:
  #       cmd: "curl -fsS -o /dev/null -w '%{http_code}\\n' http://localhost:{{ host_port }}/ | grep -E '^(200|301|302)$'"
  #     timeout: 60
