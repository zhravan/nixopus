debug_cloning_repo = "Cloning {repo} to {path} (force: {force})"
debug_executing_git_clone = "Executing git clone: {command}"
debug_git_clone_success = "Git clone completed successfully"
debug_git_clone_failed = "Git clone failed (code: {code}): {error}"
debug_unexpected_error = "Unexpected error: {error_type}: {error}"
debug_removing_directory = "Removing existing directory: {path}"
debug_directory_removal_failed = "Failed to remove existing directory"
debug_path_exists_force_disabled = "Path exists and force disabled: {path}"
debug_clone_completed = "Clone completed in {duration}s - success: {success}"
debug_clone_command_invoked = "Clone command invoked with parameters:"
debug_repo_param = "  repo: {repo}"
debug_branch_param = "  branch: {branch}"
debug_path_param = "  path: {path}"
debug_force_param = "  force: {force}"
debug_verbose_param = "  verbose: {verbose}"
debug_output_param = "  output: {output}"
debug_dry_run_param = "  dry_run: {dry_run}"
debug_executing_dry_run = "Executing dry run mode"
debug_dry_run_completed = "Dry run completed successfully"
debug_clone_operation_result = "Clone operation result - success: {success}"
debug_clone_operation_failed = "Clone operation failed, raising exit"
debug_clone_operation_completed = "Clone operation completed successfully"
debug_exception_caught = "Exception caught in clone callback: {error_type}: {error}"
debug_exception_details = "Exception details: {error}"
debug_timeout_param = "  timeout: {timeout}"
debug_config_created = "Created {config_type} with parameters"
debug_action_created = "Created {action_type} action instance"
debug_timeout_wrapper_created = "TimeoutWrapper created with {timeout}s timeout"
debug_executing_with_timeout = "Executing clone operation with {timeout}s timeout"
debug_timeout_completed = "Timeout wrapper completed successfully"
debug_timeout_error = "Timeout error occurred: {error}"
path_already_exists_use_force = "Path {path} already exists. Use --force to overwrite."
prerequisites_validation_failed = "Prerequisites validation failed"
failed_to_prepare_target_directory = "Failed to prepare target directory"
invalid_repo = "Invalid repository format"
invalid_repository_url = "Invalid repository URL format"
invalid_path = "Invalid path format"
unknown_error = "Unknown error"
successfully_cloned = "Successfully cloned {repo} to {path}"
dry_run_mode = "=== DRY RUN MODE ==="
dry_run_command_would_be_executed = "The following command would be executed:"
dry_run_command = "Command: {command}"
dry_run_repository = "Repository: {repo}"
dry_run_branch = "Branch: {branch}"
dry_run_target_path = "Target path: {path}"
dry_run_force_mode = "Force mode: {force}"
path_exists_will_overwrite = "Path {path} exists and will be overwritten (force mode)"
path_exists_would_fail = "Path {path} exists - clone would fail without --force"
target_path_not_exists = "Target path {path} does not exist"
end_dry_run = "=== END DRY RUN ==="
default_branch = "default" 