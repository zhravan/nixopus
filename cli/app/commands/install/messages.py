path_already_exists_use_force = "Path {path} already exists. Use --force to overwrite."
executing_command = "Executing: {command}"
installing_nixopus = "Installing nixopus"
invalid_output_format = "Invalid output format"
invalid_dry_run = "Invalid dry run format"
invalid_force = "Invalid force format"
invalid_verbose = "Invalid verbose format"
dry_run_mode = "=== DRY RUN MODE ==="
dry_run_command_would_be_executed = "The following command would be executed:"
dry_run_command = "Command: {command}"
dry_run_force_mode = "Force mode: {force}"
end_dry_run = "=== END DRY RUN ==="
prerequisites_validation_failed = "Prerequisites validation failed"
successfully_added_ssh_key = "Successfully generated SSH key: {key}"
ssh_key_add_failed = "SSH key generation failed: {error}"
unexpected_error_during_ssh_add = "Unexpected error during SSH key generation: {error}"
dry_run_ssh_key = "SSH key path: {key}"
dry_run_passphrase = "Passphrase: {passphrase}"
adding_ssh_key = "Generating SSH key: {key}"
invalid_ssh_key_path = "Invalid SSH key path format"
invalid_passphrase = "Invalid passphrase format"
ssh_key_not_found = "SSH key not found: {key}"
failed_to_add_ssh_key = "Failed to generate SSH key"
executing_ssh_keygen = "Executing ssh-keygen: {command}"
successfully_generated_ssh_key = "Successfully generated SSH key: {key}"
ssh_keygen_failed = "SSH key generation failed: {error}"
unexpected_error_during_ssh_keygen = "Unexpected error during SSH key generation: {error}"
generating_ssh_key = "Generating SSH key: {key}"
invalid_key_type = "Invalid key type format"
invalid_key_size = "Invalid key size format"
setting_permissions = "Setting proper file permissions"
adding_to_authorized_keys = "Adding public key to authorized_keys"
ssh_directory_created = "Created SSH directory: {dir}"
permissions_set_successfully = "File permissions set successfully"
authorized_keys_updated = "Public key added to authorized_keys"
ssh_key_already_exists = "SSH key already exists: {path}. Use --force to overwrite."
failed_to_add_ssh_key = "Failed to add SSH key to authorized_keys"
failed_to_read_public_key = "Failed to read public key"
failed_to_append_to_authorized_keys = "Failed to append to authorized_keys"
failed_to_add_to_authorized_keys = "Failed to add to authorized_keys: {error}"
unknown_error = "Unknown error"
unsupported_package_manager = "Unsupported package manager: {package_manager}"
no_supported_package_manager = "No supported package manager found"
failed_to_install = "Failed to install {dep}: {error}"
installing_dep = "Installing {dep}"
dry_run_update_cmd = "[DRY RUN] Would run: {cmd}"
dry_run_install_cmd = "[DRY RUN] Would run: {cmd}"
timeout_error = "Operation timed out after {timeout} seconds"
failed_to_run_ssh = "Failed to run SSH setup"
failed_to_run_up = "Failed to start services"
installation_completed = "Nixopus installation completed successfully!"
installation_failed = "Installation failed"
ports_unavailable = "Required ports are not available"
missing_dependencies_warning = "Missing dependencies will be installed"
dependencies_installed = "Dependencies installed successfully"
dependency_installation_timeout = "Dependency installation timed out"
clone_failed = "Repository clone failed"
env_file_creation_failed = "Failed to create environment file"
env_file_permissions_failed = "Failed to set environment file permissions"
proxy_config_created = "Created Caddyfile"
ssh_setup_failed = "SSH setup failed"
services_start_failed = "Services failed to start"
proxy_load_failed = "Failed to load Caddy proxy configuration"
debug_ssh_config_validation = "DEBUG: Validating SSH configuration: path={path}, type={key_type}, size={key_size}"
debug_ssh_path_expansion = "DEBUG: Expanding SSH path from '{original}' to '{expanded}'"
debug_ssh_directory_check = "DEBUG: Checking SSH directory existence: {directory}"
debug_ssh_directory_creation = "DEBUG: Creating SSH directory: {directory} with permissions {permissions}"
debug_ssh_keygen_availability = "DEBUG: Checking ssh-keygen availability"
debug_ssh_keygen_command_build = "DEBUG: Building ssh-keygen command: {command}"
debug_ssh_key_generation_start = "DEBUG: Starting SSH key generation for: {path}"
debug_ssh_key_generation_success = "DEBUG: SSH key generation completed successfully: {path}"
debug_ssh_permission_setting = "DEBUG: Setting permissions for private key: {private_key} and public key: {public_key}"
debug_ssh_authorized_keys_path = "DEBUG: Authorized keys path: {path}"
debug_ssh_authorized_keys_read = "DEBUG: Reading public key content from: {path}"
debug_ssh_authorized_keys_append = "DEBUG: Appending public key to authorized_keys: {path}"
debug_ssh_keygen_availability_result = "ssh-keygen availability check result: {availability}"
debug_ssh_keygen_availability_failed = "ssh-keygen availability check failed: {error}"
debug_ssh_keygen_version_info = "SSH keygen version: {version}"
debug_ssh_process_stdout = "Process stdout: {stdout}"
debug_ssh_process_stderr = "Process stderr: {stderr}"
debug_ssh_private_key_permissions = "Setting private key permissions to 0600: {path}"
debug_ssh_private_key_permissions_failed = "Failed to set private key permissions: {error}"
debug_ssh_public_key_permissions = "Setting public key permissions to 0644: {path}"
debug_ssh_public_key_permissions_failed = "Failed to set public key permissions: {error}"
debug_ssh_permissions_success = "SSH key permissions set successfully"
debug_ssh_permissions_exception = "Exception while setting permissions: {error}"
debug_ssh_directory_created = "SSH directory created successfully: {directory}"
debug_ssh_directory_creation_failed = "Failed to create SSH directory: {error}"
debug_ssh_directory_exception = "Exception while creating SSH directory: {error}"
debug_ssh_public_key_read_failed = "Failed to read public key content: {error}"
debug_ssh_directory_missing = "SSH directory does not exist, creating: {directory}"
debug_ssh_authorized_keys_missing = "authorized_keys file does not exist, creating: {path}"
debug_ssh_authorized_keys_created = "Created authorized_keys file with 0600 permissions: {path}"
debug_ssh_authorized_keys_creation_failed = "Failed to create authorized_keys file: {error}"
debug_ssh_authorized_keys_append_failed = "Failed to append to authorized_keys: {error}"
debug_ssh_authorized_keys_exception = "Exception in add_to_authorized_keys: {error}"
debug_ssh_key_exists = "SSH key path already exists: {path}"
debug_ssh_force_disabled = "Force mode is disabled, failing validation"
debug_ssh_force_enabled = "Force mode is enabled, will overwrite existing key"
debug_ssh_key_not_exists = "SSH key path does not exist: {path}"
debug_ssh_prerequisites_completed = "Prerequisites validation completed successfully"
debug_ssh_prerequisites_failed_abort = "Prerequisites validation failed, aborting SSH key generation"
debug_ssh_dry_run_enabled = "Dry run mode enabled, skipping actual key generation"
debug_ssh_key_directory_info = "SSH key directory: {directory}"
debug_ssh_directory_creation_enabled = "SSH directory creation enabled, ensuring directory exists: {directory}"
debug_ssh_directory_creation_failed_abort = "SSH directory creation failed: {error}"
debug_ssh_generation_process_start = "Starting SSH key generation process"
debug_ssh_generation_failed_abort = "SSH key generation failed: {error}"
debug_ssh_permissions_enabled = "Setting permissions enabled, configuring SSH key permissions"
debug_ssh_public_key_path_info = "Public key path: {path}"
debug_ssh_permissions_failed_abort = "Permission setting failed: {error}"
debug_ssh_authorized_keys_enabled = "Adding to authorized_keys enabled, updating authorized_keys file"
debug_ssh_authorized_keys_failed_abort = "Adding to authorized_keys failed: {error}"
debug_ssh_process_completed = "SSH key generation process completed successfully"
operation_timed_out = "Operation timed out"
created_env_file = "Created {service_name} environment file: {env_file}"
config_file_not_found = "Config file not found: {config_file}"
configuration_key_has_no_default_value = "Configuration key '{key}' has no default value and was not provided"
