dry_run_mode = "üîç DRY RUN MODE"
dry_run_command_would_be_executed = "The following command would be executed:"
dry_run_command = "Command:"
dry_run_port = "Port:"
dry_run_config_file = "Config file:"
end_dry_run = "--- End of dry run ---"
proxy_initialized_successfully = "Caddy proxy initialized successfully on port {port}"
proxy_status_running = "Caddy proxy is running on port {port}"
proxy_reloaded_successfully = "Caddy proxy configuration reloaded successfully on port {port}"
proxy_stopped_successfully = "Caddy proxy stopped successfully on port {port}"
proxy_init_failed = "Failed to initialize Caddy proxy"
proxy_status_stopped = "Caddy proxy is not running on port {port}"
proxy_status_failed = "Failed to check Caddy proxy status"
proxy_reload_failed = "Failed to reload Caddy proxy configuration"
proxy_stop_failed = "Failed to stop Caddy proxy"
config_file_required = "Configuration file is required"
config_file_not_found = "Configuration file not found: {file}"
invalid_json_config = "Invalid JSON in configuration file: {error}"
port_must_be_between_1_and_65535 = "Port must be between 1 and 65535"
caddy_connection_failed = "Failed to connect to Caddy: {error}"
caddy_status_code_error = "Caddy returned status code: {code}"
caddy_load_failed = "Failed to load configuration: {code} - {response}"
debug_init_proxy = "Initializing Caddy proxy on port: {port}"
debug_check_status = "Checking Caddy proxy status on port: {port}"
debug_reload_config = "Reloading Caddy proxy configuration on port: {port}"
debug_stop_proxy = "Stopping Caddy proxy on port: {port}"
info_caddy_running = "Caddy is running"
info_config_loaded = "Configuration loaded successfully"
info_caddy_stopped = "Caddy stopped successfully"
debug_checking_caddy_status = "Checking Caddy status: GET {url}"
debug_caddy_response = "Caddy response: {code}"
debug_caddy_config_accessible = "Caddy config endpoint accessible"
debug_caddy_non_200 = "Caddy returned non-200 status: {code}"
debug_connection_refused = "Connection refused to Caddy admin API on port {port}"
debug_request_failed = "Request failed: {error}"
debug_unexpected_error = "Unexpected error during status check: {error}"
debug_loading_config_file = "Loading config file: {file}"
debug_config_parsed = "Config file parsed successfully"
debug_posting_config = "Posting config to Caddy: POST {url}"
debug_caddy_load_response = "Caddy load response: {code}"
debug_config_loaded_success = "Configuration loaded successfully"
debug_caddy_load_failed = "Caddy load failed: {error}"
debug_stopping_caddy = "Stopping Caddy: POST {url}"
debug_caddy_stop_response = "Caddy stop response: {code}"
debug_caddy_stopped_success = "Caddy stopped successfully"
debug_caddy_stop_failed = "Caddy stop failed: {error}"
caddy_is_running = "Caddy is running"
caddy_not_running = "Caddy not running"
config_file_required_error = "Configuration file is required"
config_file_not_found_error = "Config file not found: {file}"
invalid_json_error = "Invalid JSON: {error}"
cannot_connect_to_caddy = "Cannot connect to Caddy admin API on port {port}"
request_failed_error = "Request failed: {error}"
http_error = "HTTP {code}"
operation_timed_out = "Operation timed out after {timeout} seconds"
unexpected_error = "Unexpected error: {error}"
