version: '3.8'

services:
  nixopus-api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - PORT=${API_PORT:-9999}
    container_name: nixopus-api-container
    ports:
      - "${API_PORT:-9999}:${API_PORT:-9999}"
    restart: unless-stopped
    environment:
      - PORT=${PORT:-9999}
      - DB_NAME=${DB_NAME:-postgres}
      - USERNAME=${USERNAME:-postgres}
      - PASSWORD=${PASSWORD:-12344}
      - HOST_NAME=${HOST_NAME:-localhost}
      - DB_PORT=${DB_PORT:-5432}
      - SSL_MODE=${SSL_MODE:-disable}
      - SSH_HOST=${SSH_HOST:-localhost}
      - SSH_PORT=${SSH_PORT:-22}
      - SSH_USER=${SSH_USER:-root}
      - SSH_PASSWORD=${SSH_PASSWORD:-1234}
      - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY:-}
    volumes:
      - ./logs:/app/logs
    networks:
      - nixopus-network
    depends_on:
      - nixopus-db

  nixopus-db:
    image: postgres:14-alpine
    container_name: nixopus-db-container
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${USERNAME:-nixopus}
      - POSTGRES_PASSWORD=${PASSWORD:-nixopus}
      - POSTGRES_DB=${DB_NAME:-nixopus}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - nixopus-network
  
  nixopus-view:
    build:
      context: ./view
      dockerfile: Dockerfile
      args:
        - PORT=${NEXT_PUBLIC_PORT:-3000}
    container_name: nixopus-view-container
    ports:
      - "${NEXT_PUBLIC_PORT:-3000}:${NEXT_PUBLIC_PORT:-3000}"
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL:-https://api.nixopus.com}
    volumes:
      - ./logs:/app/logs
    networks:
      - nixopus-network

networks:
  nixopus-network:
    driver: bridge