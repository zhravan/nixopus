version: "3.8"

services:
  nixopus-api:
    image: ghcr.io/${GITHUB_REPOSITORY:-raghavyuva/nixopus}-api:latest
    container_name: nixopus-api-container
    ports:
      - "${API_PORT:-8443}:${API_PORT:-8443}"
    restart: unless-stopped
    env_file:
      - /etc/nixopus/source/api/.env
    environment:
      - HOST_NAME=nixopus-db
    volumes:
      - ./logs:/app/logs
      - ${DOCKER_CERT_PATH:-/etc/nixopus/docker-certs}:/etc/nixopus/docker-certs
      - ${SSH_PRIVATE_KEY:-/etc/nixopus/ssh/id_rsa}:/etc/nixopus/ssh/id_rsa
      - ${MOUNT_PATH:-/etc/nixopus/configs}:/etc/nixopus/configs
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/nixopus/source/api/.env:/app/.env
    networks:
      - nixopus-network
    depends_on:
      nixopus-db:
        condition: service_healthy

  nixopus-redis:
    image: redis:7-alpine
    container_name: nixopus-redis-container
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ${REDIS_VOLUME:-/etc/nixopus/redis}:/data
    command: redis-server --appendonly yes
    networks:
      - nixopus-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  nixopus-db:
    image: postgres:14-alpine
    container_name: nixopus-db-container
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${USERNAME}
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - ${DB_VOLUME:-/etc/nixopus/db}:/var/lib/postgresql/data
    networks:
      - nixopus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USERNAME} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # nixopus-test-db:
  #   image: postgres:14-alpine
  #   container_name: nixopus-test-db-container
  #   ports:
  #     - "${TEST_DB_PORT:-5433}:5432"
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=${TEST_DB_USERNAME:-nixopus}
  #     - POSTGRES_PASSWORD=${TEST_DB_PASSWORD:-nixopus}
  #     - POSTGRES_DB=${TEST_DB_NAME:-nixopus_test}
  #   networks:
  #     - nixopus-network

  nixopus-view:
    image: ghcr.io/${GITHUB_REPOSITORY:-raghavyuva/nixopus}-view:latest
    container_name: nixopus-view-container
    build:
      args:
        - NEXT_PUBLIC_PORT=${NEXT_PUBLIC_PORT}
    ports:
      - "${NEXT_PUBLIC_PORT:-7443}:${NEXT_PUBLIC_PORT:-7443}"
    restart: unless-stopped
    env_file:
      - /etc/nixopus/source/view/.env
    volumes:
      - ./logs:/app/logs
      - /etc/nixopus/source/view/.env:/app/.env
    networks:
      - nixopus-network

  nixopus-caddy:
    image: caddy:latest
    container_name: nixopus-caddy-container
    ports:
      - "2019:2019"
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nixopus/source/helpers/Caddyfile:/etc/caddy/Caddyfile
      - ${CADDY_DATA_VOLUME:-/etc/nixopus/caddy}:/data
      - ${CADDY_CONFIG_VOLUME:-/etc/nixopus/caddy}:/config
    command:
      [
        "caddy",
        "run",
        "--config",
        "/etc/caddy/Caddyfile",
        "--adapter",
        "caddyfile"
      ]
    networks:
      - nixopus-network

networks:
  nixopus-network:
    driver: bridge
