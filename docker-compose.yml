version: '3.8'

services:
  nixopus-api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - PORT=${API_PORT:-8443}
    container_name: nixopus-api-container
    ports:
      - "${API_PORT:-8443}:${API_PORT:-8443}"
    restart: unless-stopped
    environment:
      - PORT=${PORT:-8443}
      - DB_NAME=${DB_NAME}
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST_NAME=${HOST_NAME:-nixopus-db}
      - DB_PORT=${DB_PORT:-5432}
      - SSL_MODE=${SSL_MODE:-disable}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
      - NEXT_PUBLIC_WEBSOCKET_URL=${NEXT_PUBLIC_WEBSOCKET_URL}
      - NEXT_PUBLIC_PORT=${NEXT_PUBLIC_PORT:-7443}
      - MOUNT_PATH=${MOUNT_PATH:-/etc/nixopus/configs}
      - SSH_HOST=${SSH_HOST}
      - SSH_PORT=${SSH_PORT:-22}
      - SSH_USER=${SSH_USER:-root}
      - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}
      - DOCKER_HOST=${DOCKER_HOST}
      - DOCKER_TLS_VERIFY=${DOCKER_TLS_VERIFY:-1}
      - DOCKER_CERT_PATH=${DOCKER_CERT_PATH}
      - CADDY_ENDPOINT=${CADDY_ENDPOINT:-http://localhost:2019}
    volumes:
      - ./logs:/app/logs
      - ${DOCKER_CERT_PATH}:/etc/docker/certs
      - ${SSH_PRIVATE_KEY}:/root/.ssh/id_rsa
      - ${MOUNT_PATH:-/etc/nixopus/configs}:/etc/nixopus/configs
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - nixopus-network
    depends_on:
      - nixopus-db

  nixopus-db:
    image: postgres:14-alpine
    container_name: nixopus-db-container
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${USERNAME}
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - nixopus-network
  
  nixopus-test-db:
    image: postgres:14-alpine
    container_name: nixopus-test-db-container
    ports:
      - "${TEST_DB_PORT:-5433}:5432"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${TEST_DB_USERNAME:-nixopus}
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD:-nixopus}
      - POSTGRES_DB=${TEST_DB_NAME:-nixopus_test}
    networks:
      - nixopus-network
  
  nixopus-view:
    build:
      context: ./view
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
    container_name: nixopus-view-container
    ports:
      - "${NEXT_PUBLIC_PORT:-7443}:${NEXT_PUBLIC_PORT:-7443}"
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL}
      - NEXT_PUBLIC_WEBSOCKET_URL=${NEXT_PUBLIC_WEBSOCKET_URL}
    volumes:
      - ./logs:/app/logs
    networks:
      - nixopus-network
  
  nixopus-caddy:
    image: caddy:latest
    ports:
      - "2019:2019"
      - "80:80"
      - "443:443"
    volumes:
      - ./api/helpers/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy_data:/data
      - ./caddy_config:/config
    networks:
      - nixopus-network

networks:
  nixopus-network:
    driver: bridge