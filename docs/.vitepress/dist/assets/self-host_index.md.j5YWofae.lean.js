import{aa as o,q as e,at as a,p as n}from"./chunks/framework.CNCqNKvr.js";const h=JSON.parse('{"title":"Hosting Your Projects","description":"","frontmatter":{},"headers":[],"relativePath":"self-host/index.md","filePath":"self-host/index.md","lastUpdated":1744472466000}'),i={name:"self-host/index.md"};function r(s,t,l,d,p,c){return n(),e("div",null,t[0]||(t[0]=[a(`<h1 id="hosting-your-projects" tabindex="-1">Hosting Your Projects <a class="header-anchor" href="#hosting-your-projects" aria-label="Permalink to &quot;Hosting Your Projects&quot;">​</a></h1><p>Nixopus makes it easy to host projects on your own VPS. With Nixopus, you can easily manage rolling updates, monitor container statistics, and configure it to run as a CI/CD pipeline.</p><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>To get started, navigate to the self-host section and follow the instructions:</p><ul><li>Connect your GitHub account with Nixopus.</li><li>Choose the project you want to deploy.</li><li>Nixopus will automatically populate the details such as name and description.</li><li>Customize them, if needed.</li><li>Finally, click &quot;Deploy&quot; to start the deployment process.</li></ul><p>For more information on how to deploy projects <a href="#configuration">visit</a></p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Field</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td>Port</td><td>External port</td><td>3000</td></tr><tr><td>Name</td><td>Name that describes about your project</td><td>My Project</td></tr><tr><td>Build Pack</td><td>Pack to use for building</td><td>docker compose / static / dockerfile</td></tr><tr><td>Environment</td><td>Environment type</td><td>Dev / Staging / Prod</td></tr><tr><td>Pre Run Command</td><td>Commands to run before starting the container</td><td><code>npm install</code></td></tr><tr><td>Post Run Command</td><td>Commands to run after the container has started</td><td><code>npm start</code></td></tr><tr><td>Build Variables</td><td>Add build variables to your project</td><td><code>NODE_ENV=production</code></td></tr><tr><td>Environment Variables</td><td>Add environment variables to your project</td><td><code>NODE_ENV=production</code></td></tr><tr><td>Custom Domain</td><td>Domain in which your project will be available</td><td><code>example.com</code></td></tr><tr><td>Base Path</td><td>Root directory of your application within the repository (for monorepo setups)</td><td><code>apps/frontend</code></td></tr><tr><td>Dockerfile Path</td><td>Path to Dockerfile relative to the base path</td><td><code>Dockerfile</code> or <code>docker/Dockerfile.prod</code></td></tr></tbody></table><h2 id="monorepo-support" tabindex="-1">Monorepo Support <a class="header-anchor" href="#monorepo-support" aria-label="Permalink to &quot;Monorepo Support&quot;">​</a></h2><p>Nixopus supports deploying applications from monorepo structures. This is particularly useful when you have multiple applications in a single repository.</p><h3 id="configuration-for-monorepos" tabindex="-1">Configuration for Monorepos <a class="header-anchor" href="#configuration-for-monorepos" aria-label="Permalink to &quot;Configuration for Monorepos&quot;">​</a></h3><ol><li><p><strong>Base Path</strong>:</p><ul><li>Specifies the root directory of your application within the repository</li><li>Example: If your app is in <code>apps/frontend</code>, set base path to <code>apps/frontend</code></li><li>Default: <code>/</code> (root of repository)</li></ul></li><li><p><strong>Dockerfile Path</strong>:</p><ul><li>Path to your Dockerfile relative to the base path</li><li>Example: If Dockerfile is in <code>apps/frontend/docker/Dockerfile.prod</code>, set to <code>docker/Dockerfile.prod</code></li><li>Default: <code>Dockerfile</code></li></ul></li></ol><h3 id="example-monorepo-structure" tabindex="-1">Example Monorepo Structure <a class="header-anchor" href="#example-monorepo-structure" aria-label="Permalink to &quot;Example Monorepo Structure&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>monorepo/</span></span>
<span class="line"><span>  ├── apps/</span></span>
<span class="line"><span>  │   ├── frontend/</span></span>
<span class="line"><span>  │   │   ├── docker/</span></span>
<span class="line"><span>  │   │   │   └── Dockerfile.prod</span></span>
<span class="line"><span>  │   │   └── src/</span></span>
<span class="line"><span>  │   └── backend/</span></span>
<span class="line"><span>  │       ├── Dockerfile</span></span>
<span class="line"><span>  │       └── src/</span></span>
<span class="line"><span>  └── shared/</span></span>
<span class="line"><span>      └── libs/</span></span></code></pre></div><h3 id="configuration-examples" tabindex="-1">Configuration Examples <a class="header-anchor" href="#configuration-examples" aria-label="Permalink to &quot;Configuration Examples&quot;">​</a></h3><ol><li><p><strong>Frontend App</strong>:</p><ul><li>Base Path: <code>apps/frontend</code></li><li>Dockerfile Path: <code>docker/Dockerfile.prod</code></li></ul></li><li><p><strong>Backend App</strong>:</p><ul><li>Base Path: <code>apps/backend</code></li><li>Dockerfile Path: <code>Dockerfile</code> (default)</li></ul></li></ol><h2 id="project-management" tabindex="-1">Project Management <a class="header-anchor" href="#project-management" aria-label="Permalink to &quot;Project Management&quot;">​</a></h2><ul><li>Once your project has been deployed, you can manage it from the &quot;Self Host&quot; section.</li><li>You can click on a deployed project to view its details, edit its configuration, redeploy it, or delete it.</li><li>The &quot;Logs&quot; section will show you the container logs and deployment logs.</li><li>The &quot;Deployments&quot; section will show you the information about all the deployments of this project.</li></ul>`,18)]))}const f=o(i,[["render",r]]);export{h as __pageData,f as default};
