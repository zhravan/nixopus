{
    "openapi": "3.1.0",
    "info": {
        "title": "core",
        "description": "",
        "license": {
            "name": ""
        },
        "version": "0.1.0"
    },
    "paths": {
        "/api/v1/cron-jobs": {
            "get": {
                "tags": [
                    "cron-jobs"
                ],
                "operationId": "get_all_jobs",
                "responses": {
                    "200": {
                        "description": "List of all cron jobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CronJob"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "cron-jobs"
                ],
                "operationId": "create_job",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Cron job created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/cron-jobs/{job_id}": {
            "get": {
                "tags": [
                    "cron-jobs"
                ],
                "operationId": "get_job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Unique identifier of the cron job",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cron job found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cron job not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "cron-jobs"
                ],
                "operationId": "update_job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Unique identifier of the cron job to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCronJob"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Cron job updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CronJob"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cron-jobs"
                ],
                "operationId": "delete_job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Unique identifier of the cron job to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Cron job deleted successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/cron-jobs/{job_id}/logs": {
            "get": {
                "tags": [
                    "cron-jobs"
                ],
                "operationId": "get_logs_of_cron_job_by_id",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Unique identifier of the cron job to get logs for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of logs for the specified cron job",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Log"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/files": {
            "post": {
                "tags": [
                    "file-management"
                ],
                "operationId": "create_file",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDirectoryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "File created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "file-management"
                ],
                "operationId": "delete_file",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteFileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "File deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/files/copy": {
            "post": {
                "tags": [
                    "file-management"
                ],
                "operationId": "copy_folder_and_files_recursively",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoveFileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Folder and files copied successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/files/directories": {
            "post": {
                "tags": [
                    "file-management"
                ],
                "operationId": "create_directory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDirectoryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Directory created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Directory already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "file-management"
                ],
                "operationId": "delete_directory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteFileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Directory deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/files/directories/size": {
            "post": {
                "tags": [
                    "file-management"
                ],
                "operationId": "calculate_directory_size",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteFileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Directory size calculated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileSizeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/files/directories/with-parent": {
            "post": {
                "tags": [
                    "file-management"
                ],
                "operationId": "create_directory_with_parent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDirectoryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Directory created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/files/disk-usage": {
            "get": {
                "tags": [
                    "file-management"
                ],
                "operationId": "calculate_disk_usage",
                "responses": {
                    "200": {
                        "description": "Disk usage calculated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiskUsageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/files/list": {
            "get": {
                "tags": [
                    "file-management"
                ],
                "operationId": "list_files_and_directories_in_path",
                "parameters": [
                    {
                        "name": "path",
                        "in": "query",
                        "description": "Path to list files and directories from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Files and directories listed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileListResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/files/memory-usage": {
            "get": {
                "tags": [
                    "file-management"
                ],
                "operationId": "calculate_memory_usage",
                "responses": {
                    "200": {
                        "description": "Memory usage calculated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MemoryUsageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/files/move": {
            "post": {
                "tags": [
                    "file-management"
                ],
                "operationId": "move_folder_and_files_recursively",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MoveFileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Folder and files moved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateDirectoryResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/marketplace/applications": {
            "get": {
                "tags": [
                    "marketplace"
                ],
                "operationId": "list_applications",
                "responses": {
                    "200": {
                        "description": "List of applications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Application"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "marketplace"
                ],
                "operationId": "install_application",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallApplication"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Application installed successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "marketplace"
                ],
                "operationId": "uninstall_application",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallApplication"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Application uninstalled successfully"
                    }
                }
            }
        },
        "/api/v1/marketplace/applications/by-reference": {
            "get": {
                "tags": [
                    "marketplace"
                ],
                "operationId": "get_application_by_name",
                "parameters": [
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": "Application ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/marketplace/applications/store-all": {
            "get": {
                "tags": [
                    "marketplace"
                ],
                "operationId": "store_application_details",
                "responses": {
                    "200": {
                        "description": "Application details stored successfully"
                    }
                }
            }
        },
        "/api/v1/marketplace/applications/{app_id}/logs": {
            "get": {
                "tags": [
                    "marketplace"
                ],
                "operationId": "get_application_logs",
                "parameters": [
                    {
                        "name": "app_id",
                        "in": "path",
                        "description": "Application ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Log"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/self-host/applications": {
            "get": {
                "tags": [
                    "self-host"
                ],
                "operationId": "list_all_hosted_applications",
                "responses": {
                    "200": {
                        "description": "List of all hosted applications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "self-host"
                ],
                "operationId": "install_application",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewApplicationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Application installed successfully"
                    },
                    "500": {
                        "description": "Failed to install application"
                    }
                }
            }
        },
        "/api/v1/self-host/applications/deploy": {
            "post": {
                "tags": [
                    "self-host"
                ],
                "operationId": "force_deploy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApplicationForDatabase"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Application deployed successfully"
                    },
                    "500": {
                        "description": "Failed to deploy application"
                    }
                }
            }
        },
        "/api/v1/self-host/applications/deploy-without-cache": {
            "post": {
                "tags": [
                    "self-host"
                ],
                "operationId": "force_deploy_without_cache",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApplicationForDatabase"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Application deployed successfully without cache"
                    },
                    "500": {
                        "description": "Failed to deploy application"
                    }
                }
            }
        },
        "/api/v1/self-host/applications/{id}": {
            "get": {
                "tags": [
                    "self-host"
                ],
                "operationId": "get_application_by_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Application ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application details",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "self-host"
                ],
                "operationId": "update_application_details",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApplicationForDatabase"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Application details updated successfully"
                    },
                    "500": {
                        "description": "Failed to update application"
                    }
                }
            },
            "delete": {
                "tags": [
                    "self-host"
                ],
                "operationId": "delete_application_by_id",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StopApplicationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Application deleted successfully"
                    }
                }
            }
        },
        "/api/v1/self-host/applications/{id}/logs": {
            "get": {
                "tags": [
                    "self-host"
                ],
                "operationId": "get_logs_of_self_host_application",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Application ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "container_id",
                        "in": "query",
                        "description": "Container ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/self-host/build-history": {
            "get": {
                "tags": [
                    "self-host"
                ],
                "operationId": "get_image_build_history",
                "parameters": [
                    {
                        "name": "image_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Environment"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image build history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get image build history"
                    }
                }
            }
        },
        "/api/v1/self-host/containers": {
            "get": {
                "tags": [
                    "self-host"
                ],
                "operationId": "list_containers_by_image",
                "parameters": [
                    {
                        "name": "image_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Environment"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of containers"
                    },
                    "500": {
                        "description": "Failed to list containers"
                    }
                }
            }
        },
        "/api/v1/self-host/repositories": {
            "get": {
                "tags": [
                    "self-host"
                ],
                "operationId": "get_user_repositories",
                "parameters": [
                    {
                        "name": "installation_id",
                        "in": "query",
                        "description": "GitHub App installation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user repositories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/self-host/webhook": {
            "post": {
                "tags": [
                    "self-host"
                ],
                "operationId": "github_webhook",
                "requestBody": {
                    "description": "GitHub webhook payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Webhook received successfully"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Application": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "reference",
                    "app_type",
                    "stars",
                    "stars_display",
                    "tags"
                ],
                "properties": {
                    "alternatives": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "app_type": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "icon_type": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "license": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "repository": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "repository_link": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "source": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "stars": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "stars_display": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "website": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "ApplicationLogsRequest": {
                "type": "object",
                "required": [
                    "id",
                    "container_id"
                ],
                "properties": {
                    "container_id": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "BuildPack": {
                "type": "string",
                "enum": [
                    "Dockerfile",
                    "DockerCompose",
                    "Static"
                ]
            },
            "CreateDirectoryRequest": {
                "type": "object",
                "required": [
                    "path",
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                }
            },
            "CreateDirectoryResponse": {
                "type": "object",
                "required": [
                    "success",
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "CronJob": {
                "type": "object",
                "required": [
                    "id",
                    "tenant_id",
                    "schedule",
                    "command",
                    "name",
                    "user_id",
                    "is_active"
                ],
                "properties": {
                    "bash_script": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "command": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "last_run_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resource_limits": {},
                    "schedule": {
                        "type": "string"
                    },
                    "tenant_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "DeleteFileRequest": {
                "type": "object",
                "required": [
                    "path"
                ],
                "properties": {
                    "path": {
                        "type": "string"
                    }
                }
            },
            "DiskUsageData": {
                "type": "object",
                "required": [
                    "filesystem",
                    "size",
                    "used",
                    "available",
                    "capacity",
                    "iused",
                    "ifree",
                    "iused_percentage",
                    "mounted_on"
                ],
                "properties": {
                    "available": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "string"
                    },
                    "filesystem": {
                        "type": "string"
                    },
                    "ifree": {
                        "type": "string"
                    },
                    "iused": {
                        "type": "string"
                    },
                    "iused_percentage": {
                        "type": "string"
                    },
                    "mounted_on": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "used": {
                        "type": "string"
                    }
                }
            },
            "DiskUsageResponse": {
                "type": "object",
                "required": [
                    "success",
                    "message"
                ],
                "properties": {
                    "data": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/DiskUsageData"
                            }
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "Environment": {
                "type": "string",
                "enum": [
                    "Dev",
                    "Staging",
                    "Prod"
                ]
            },
            "File": {
                "type": "object",
                "required": [
                    "path",
                    "name",
                    "size",
                    "file_type",
                    "permissions",
                    "is_hidden",
                    "owner_id",
                    "group_id"
                ],
                "properties": {
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "extension": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "file_type": {
                        "$ref": "#/components/schemas/FileType"
                    },
                    "group_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "is_hidden": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "path": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                }
            },
            "FileListResponse": {
                "type": "object",
                "required": [
                    "success",
                    "message"
                ],
                "properties": {
                    "data": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "FileSizeResponse": {
                "type": "object",
                "required": [
                    "success",
                    "message"
                ],
                "properties": {
                    "data": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "minimum": 0
                    },
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "FileType": {
                "type": "string",
                "enum": [
                    "File",
                    "Directory",
                    "Symlink",
                    "Other"
                ]
            },
            "GetApplicationById": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "GetApplicationByName": {
                "type": "object",
                "required": [
                    "app_id"
                ],
                "properties": {
                    "app_id": {
                        "type": "string"
                    }
                }
            },
            "InstallApplication": {
                "type": "object",
                "required": [
                    "app_id",
                    "app_name",
                    "installation_id"
                ],
                "properties": {
                    "app_id": {
                        "type": "string"
                    },
                    "app_name": {
                        "type": "string"
                    },
                    "installation_id": {
                        "type": "string"
                    }
                }
            },
            "ListContainersRequest": {
                "type": "object",
                "required": [
                    "image_name",
                    "environment",
                    "id"
                ],
                "properties": {
                    "environment": {
                        "$ref": "#/components/schemas/Environment"
                    },
                    "id": {
                        "type": "string"
                    },
                    "image_name": {
                        "type": "string"
                    }
                }
            },
            "ListRepositoriesRequest": {
                "type": "object",
                "required": [
                    "installation_id"
                ],
                "properties": {
                    "installation_id": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "Log": {
                "type": "object",
                "required": [
                    "id",
                    "level",
                    "message"
                ],
                "properties": {
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "level": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "topic": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "MemoryUsageData": {
                "type": "object",
                "required": [
                    "total",
                    "used",
                    "free"
                ],
                "properties": {
                    "free": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "used": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    }
                }
            },
            "MemoryUsageResponse": {
                "type": "object",
                "required": [
                    "success",
                    "message"
                ],
                "properties": {
                    "data": {
                        "oneOf": [
                            {
                                "type": "null"
                            },
                            {
                                "$ref": "#/components/schemas/MemoryUsageData"
                            }
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "MoveFileRequest": {
                "type": "object",
                "required": [
                    "from_path",
                    "to_path"
                ],
                "properties": {
                    "from_path": {
                        "type": "string"
                    },
                    "to_path": {
                        "type": "string"
                    }
                }
            },
            "NewApplicationRequest": {
                "type": "object",
                "required": [
                    "application_name",
                    "docker_image",
                    "environment",
                    "pre_run_commands",
                    "post_run_commands",
                    "env_variables",
                    "build_pack",
                    "build_variables",
                    "docker_ports",
                    "repository",
                    "repository_branch",
                    "repository_owner",
                    "installation_id"
                ],
                "properties": {
                    "application_name": {
                        "type": "string"
                    },
                    "build_pack": {
                        "$ref": "#/components/schemas/BuildPack"
                    },
                    "build_variables": {
                        "type": "string"
                    },
                    "custom_domain": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "docker_image": {
                        "type": "string"
                    },
                    "docker_ports": {
                        "type": "string"
                    },
                    "env_variables": {
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/Environment"
                    },
                    "installation_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "post_run_commands": {
                        "type": "string"
                    },
                    "pre_run_commands": {
                        "type": "string"
                    },
                    "repository": {
                        "type": "string"
                    },
                    "repository_branch": {
                        "type": "string"
                    },
                    "repository_owner": {
                        "type": "string"
                    }
                }
            },
            "NewCronJob": {
                "type": "object",
                "required": [
                    "tenant_id",
                    "schedule",
                    "command",
                    "name",
                    "user_id",
                    "is_active"
                ],
                "properties": {
                    "bash_script": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "command": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resource_limits": {},
                    "schedule": {
                        "type": "string"
                    },
                    "tenant_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "StopApplicationRequest": {
                "type": "object",
                "required": [
                    "id",
                    "environment"
                ],
                "properties": {
                    "environment": {
                        "$ref": "#/components/schemas/Environment"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "UpdateApplicationForDatabase": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "application_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "build_pack": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "build_variables": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "custom_domain": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "docker_image": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "docker_ports": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "env_variables": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "environment": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "installation_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "post_run_commands": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "pre_run_commands": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "repository": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "repository_branch": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "repository_owner": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                }
            },
            "UpdateCronJob": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "bash_script": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "command": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "is_active": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "resource_limits": {},
                    "schedule": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "cron-jobs",
            "description": "Cron job management"
        },
        {
            "name": "file-management",
            "description": "File management"
        },
        {
            "name": "marketplace",
            "description": "Application marketplace"
        },
        {
            "name": "self-host",
            "description": "Self-hosting operations"
        }
    ]
}